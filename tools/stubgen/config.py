import ast
from pathlib import Path
from typing import List

# The name of the C++ module that contains the classes we generate stubs for.
CPP_CORE_MODULE_NAME = 'scipp._scipp.core'

# Template for the generated stub.
TEMPLATE_FILE = Path(__file__).resolve().parent / 'stub_template.py.template'

# Place the generated stub file here unless overridden by a command line argument.
DEFAULT_TARGET = Path(__file__).resolve(
).parent.parent.parent / 'src' / 'scipp' / 'core' / 'cpp_classes.pyi'

# Comment to place at the top of the generated stub file.
HEADER = '''############################################
#               ATTENTION                  #
# This file was generated by tools/stubgen #
# Do not edit!                             #
############################################'''


def class_is_excluded(name: str) -> bool:
    """Return True if a class stub should be omitted."""
    return name.startswith('ElementArrayView') or name.startswith('_')


def squash_overloads(overloads: List[ast.FunctionDef]) -> List[ast.FunctionDef]:
    """Combine overloads if a stub for only one is required."""
    if overloads[0].name in ('__eq__', '__ne__'):
        return overloads[:1]
    return overloads
