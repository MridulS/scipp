trigger:
  branches:
    exclude:
      - '*'

pr:
  autoCancel: true
  branches:
    include:
      - '*'

variables:
- template: templates/variables.yml

stages:
  - template: templates/code_quality_checks.yml

  - stage: 'build_and_test'
    displayName: 'Build and Test'

    jobs:
      - template: templates/build_linux.yml

      - job: 'mac'
        displayName: 'Mac OS'
        timeoutInMinutes: 80
        pool:
          vmImage: 'macOS-10.14'
        variables:
          build_dir: '$(Build.StagingDirectory)/build'
          install_dir: '$(Build.StagingDirectory)/install'
        steps:
          - checkout: self
            submodules: true
          - bash: |
              set -ex
              echo "##vso[task.prependpath]$CONDA/bin"
              sudo chown -R $USER $CONDA
            displayName: 'Add Conda to PATH'
          - bash: |
              set -ex
              conda --version
              conda env create -f scipp-developer.yml
              # TODO: source activate does not work (see https://github.com/conda/conda/issues/9566)
              echo "##vso[task.prependpath]$CONDA/envs/scipp-developer/bin"
              mkdir -p  "$(build_dir)" "$(install_dir)"
            displayName: 'Configure build environment'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake \
                -G Ninja \
                -DPYTHON_EXECUTABLE=$(command -v python) \
                -DCMAKE_INSTALL_PREFIX="$(install_dir)" \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF \
                "$(Build.Repository.LocalPath)"
            displayName: 'CMake configuration'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake --build . --target all-tests
            displayName: 'Build C++ unit tests'
          - bash: |
              set -ex
              cd "$(build_dir)"
              ./bin/scipp-common-test
              ./bin/scipp-units-test
              ./bin/scipp-core-test
              ./bin/scipp-variable-test
              ./bin/scipp-dataset-test
            displayName: 'Run C++ unit tests'
          - bash: |
              set -ex
              cd "$(build_dir)"
              cmake --build . --target install
            displayName: 'Build Python library'
          - bash: |
              set -ex
              cd package/scipp-package-test
              mkdir -p build && cd build
              cmake -DCMAKE_PREFIX_PATH="$(install_dir)" ..
              cmake --build .
              ./test
            displayName: 'Check packaging'
          - bash: |
              set -ex
              PYTHONPATH="$(install_dir)" python -m pytest
            displayName: 'Run Python unit tests'

      - job: 'windows'
        displayName: 'Windows'
        timeoutInMinutes: 120
        pool:
          vmImage: 'windows-latest'
        variables:
          build_dir: '$(Build.StagingDirectory)/build'
          install_dir: '$(Build.StagingDirectory)/install'
        steps:
          - checkout: self
            submodules: true
          - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
            displayName: 'Add Conda to PATH'
          - bash: |
              set -ex
              conda --version
              conda env create -f scipp-developer-minimal.yml
              mkdir -p  "$(build_dir)" "$(install_dir)"
            displayName: 'Configure build environment'
          - bash: |
              set -ex
              cd "$(build_dir)"
              source activate scipp-developer
              cmake \
                -G "Visual Studio 16 2019" \
                -A x64 \
                -DCMAKE_CXX_STANDARD=20 \
                -DPYTHON_EXECUTABLE=$(command -v python) \
                -DCMAKE_INSTALL_PREFIX="$(install_dir)" \
                -DCMAKE_BUILD_TYPE=Release \
                "$(Build.Repository.LocalPath)"
            displayName: 'CMake configuration'
          - bash: |
              set -ex
              cd "$(build_dir)"
              source activate scipp-developer
              cmake --build . --target all-tests --config Release
            displayName: 'Build C++ unit tests'
          - bash: |
              set -ex
              cd "$(build_dir)"
              source activate scipp-developer
              bin/Release/scipp-common-test.exe
              bin/Release/scipp-units-test.exe
              bin/Release/scipp-core-test.exe
              bin/Release/scipp-variable-test.exe
              bin/Release/scipp-dataset-test.exe
            displayName: 'Run C++ unit tests'
          - bash: |
              set -ex
              cd "$(build_dir)"
              source activate scipp-developer
              cmake --build . --target install --config Release
            displayName: 'Build Python library'
          - bash: |
              set -ex
              cd package/scipp-package-test
              source activate scipp-developer
              mkdir -p build && cd build
              cmake -DCMAKE_PREFIX_PATH="$(install_dir)" ..
              cmake --build . --config Release
              PATH="$(install_dir)/bin":$PATH
              ./Release/test.exe
            displayName: 'Check packaging'
          - bash: |
              set -ex
              source activate scipp-developer
              PATH="$(install_dir)/bin":$PATH
              PYTHONPATH="$(install_dir)" python -m pytest
            displayName: 'Run Python unit tests'

  - stage: 'post_build_checks'
    displayName: 'Post Build Checks'

    jobs:
      - template: templates/documentation_build.yml
      - template: templates/test_can_install_and_import.yml