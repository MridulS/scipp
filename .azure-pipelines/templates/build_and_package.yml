parameters:
- name: 'linux'
  type: object
  default:
    image: 'ubuntu-20.04'
    python: ['3.6', '3.7']
- name: 'osx'
  type: object
  default:
    image: 'macOS-10.14'
    python: ['3.7']

variables:
  - template: variables.yml

stages:
  - template: code_quality_checks.yml
    parameters:
      image: ${{ parameters.linux.image }}

  - stage: 'build_and_test'
    displayName: 'Build and Test'

    jobs:
      - ${{ each os in parameters }}:
        - ${{ each py in os.Value.python }}:
          - job:
            timeoutInMinutes: 120
            displayName: ${{ format('{0}-py{1}', os.Value.image, py) }}
            pool:
              vmImage: ${{ os.Value.image }}
            variables:
              PYTHON_VERSION: ${{ py }}
            steps:
              - checkout: self
                submodules: true

              # - template: ccache.yml
              #   condition: eq('${{ os.Key }}', 'ubuntu-20.04')

              - bash: |
                  echo "##vso[task.prependpath]$CONDA/bin"
                  echo "##vso[task.setvariable variable=conda_dir]$CONDA"
                  sudo chown -R $USER $CONDA
                displayName: 'Configure Conda'
              - bash: |
                  set -ex
                  conda --version
                  conda install --yes anaconda-client conda-build
                  conda config --set always_yes yes --set changeps1 no
                displayName: 'Install Conda'
              - bash: |
                  conda build --user scipp --token "$ANACONDA_TOKEN" --channel conda-forge --label dev --python="$PYTHON_VERSION" ./conda
                env:
                  ANACONDA_TOKEN: $(anaconda_token_secret)
                displayName: 'Package build'
