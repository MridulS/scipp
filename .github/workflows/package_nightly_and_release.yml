name: Package build (nightly and release)

on:
  pull_request:  # TODO temporary for setting up
  create:
    tags:
      - "*.*.*"

jobs:
  conda_build:
    name: Package build (${{ matrix.os }}, ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}  # required for conda env
    env:
      DOCS_HTML_DIR: ${{ github.workspace }}/docs_html
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7"]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0  # history required so cmake can determine version

      - uses: conda-incubator/setup-miniconda@v2
      - run: conda install --yes conda-build
      - run: conda build --channel conda-forge --python=${{ matrix.python-version }} --no-anaconda-upload --override-channels --output-folder conda/package conda

      - uses: actions/upload-artifact@v2
        with:
          name: conda-package-${{ matrix.os }}-py${{ matrix.python-version }}
          path: conda/package/*/scipp*.tar.bz2

      - uses: actions/upload-artifact@v2
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.python-version == '3.7' }}
        with:
          name: DocumentationHTML
          path: docs_html

  deploy:
    needs: conda_build
    name: Deploy packages and docs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}  # required for conda env
    env:
      conda_label: ${{ startsWith(github.ref, 'refs/tags/') && 'testrelease' || 'testdev' }}
    steps:
      - uses: conda-incubator/setup-miniconda@v2
      - run: conda install -c conda-forge --yes anaconda-client
      - uses: actions/download-artifact@v2
      - run: ls -R
      - run: anaconda --token ${{ secrets.ANACONDATOKEN }} upload --user scipp --label ${{ env.conda_label }} $(ls conda-package-*/*/*.tar.bz2)
        #- run: find conda-package-* -type f -name *.tar.bz2 -exec anaconda --token "abc" {} --force \;
        #
      - uses: actions/checkout@v2
        with:
          repository: scipp/scipp.github.io
          path: pages

      - if: ${{ env.conda_label == 'testrelease' }}
        run: |
          mkdir DocumentationHTML/release
          cp -r  DocumentationHTML DocumentationHTML/release/${GITHUB_REF#refs/*/}

      - name: Deploy documentation
        run: |
          cd pages
          rsync -av --checksum --delete --exclude .nojekyll --exclude release --exclude .git --exclude .github ../DocumentationHTML/ .
          git config --global user.name 'Documentation Builder'
          git config --global user.email 'nobody@localhost'
          git add --all .
          git status
          git commit --amend --date="$(date)" --message='Auto commit from CI'
          git status
