name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true  # cancel jobs from previous push

jobs:
  formatting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - run: python -m pip install --upgrade pip
      - run: python -m pip install -r requirements/ci.txt
      - run: tox -e static
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply automatic formatting

  build_and_test:
    needs: formatting
    name: build and test ${{ matrix.os }}, py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}  # required for conda env
    env:
      PYTHONPATH: ${{ github.workspace }}/install
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0  # history required so cmake can determine version

      - uses: ilammy/msvc-dev-cmd@v1  # Required to set up MSVC dev environment for Ninja builds.

      - name: Setup conda environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: .buildconfig/${{ matrix.os }}.yml
          cache-env: true
          extra-specs: python=${{ matrix.python-version }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.2
        with:
          key: ${{ matrix.os }}

      - name: Cache conan setup
        id: conan-cache-key
        run: |
          echo "::set-output name=key::$(/bin/date -u "+%Y%m%d")"
          echo "::set-output name=path::$(conan config home)"
      - name: Cache conan
        uses: actions/cache@v1
        with:
          path: ${{ steps.conan-cache-key.outputs.path }}
          key: conan-${{ matrix.os }}-${{ steps.conan-cache-key.outputs.key }}

      - run: cmake --preset ci-${{ matrix.os }}
      - run: cmake --build --preset build
      - run: ctest --preset test

      - run: tox -e test

      - run: tox -e docs
        if: ${{ contains(matrix.os, 'ubuntu') }}

      - uses: actions/upload-artifact@v2
        if: ${{ contains(matrix.os, 'ubuntu') }}
        with:
          name: DocumentationHTML
          path: html/
