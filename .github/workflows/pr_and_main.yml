name: PR and main CI

on:
  push:
    branches:
      - main
  pull_request:


concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true  # cancel jobs from previous push


jobs:
  formatting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: DoozyX/clang-format-lint-action@v0.13
        with:
          source: 'lib'
          extensions: 'h,cpp,tcc'
          clangFormatVersion: 10
          inplace: True
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - run: pip install cmake_format==0.6.9 flake8 yapf==0.30.0
      - run: find . -type f -name CMakeLists.txt -or -name '*.cmake' | xargs cmake-format -i
      - run: yapf --recursive --in-place .
      - run: flake8 .
      - uses: stefanzweifel/git-auto-commit-action@v4


  build_and_test:
    needs: formatting
    name: CI (${{ matrix.os }}, ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7"]
        include:
        - os: ubuntu-latest
          cmake-preset: ci-linux
        - os: macos-latest
          cmake-preset: ci-macos
        - os: windows-latest
          cmake-preset: ci-windows

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0  # history required so cmake can determine version

      - name: Setup env variables
        run: |
          echo "PYTHONPATH=$(pwd)/install" >> $GITHUB_ENV

      - name: ccache
        if: ${{ !contains(matrix.os, 'windows') }}
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ matrix.os }}
          max-size: 1000M

      - name: Setup Mambaforge and dev env
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          miniforge-variant: Mambaforge
          python-version: ${{ matrix.python-version }}
          environment-file: ${{ matrix.os == 'ubuntu-latest' && 'scipp-developer.yml' || 'scipp-developer-minimal.yml' }}
          activate-environment: scipp-developer
          auto-activate-base: false

      - name: Run cmake
        shell: bash -l {0}
        run: cmake --preset ${{ matrix.cmake-preset }}
      - name: C++ build
        shell: bash -l {0}
        run: cmake --build --preset ci
      - name: C++ tests
        shell: bash -l {0}
        run: ctest --preset ci
      - name: Python tests
        shell: bash -l {0}
        run: python -m pytest -v tests

      - name: Docs build
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash -l {0}
        run: |
            sphinx-build -v -b html -d .doctrees docs docs_html
            sphinx-build -v -b doctest -d .doctrees docs docs_html

      - uses: actions/upload-artifact@v1
        if: ${{ contains(matrix.os, 'ubuntu') }}
        with:
          name: DocumentationHTML
          path: docs_html/
